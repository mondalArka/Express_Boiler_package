import "dotenv/config"; // Use import for dotenv
import express, { Request, Response, NextFunction } from "express";
import apiRouter from "./routes/apiRoutes";
import ErrorHandlers  from "./utils/error-callback"; // assuming errorCallBack is exported like this
import cors from "cors";
import path from "path";

// Define the port either from the environment variable or default to 3000
const port: number = parseInt(process.env.PORT || "3000");

// Initialize the app
const app = express();

// Middleware setup
app.use(express.urlencoded({ extended: true }));
app.use(express.json({ limit: "50mb" }));
app.use(express.static(path.join(__dirname, "public")));
app.use(cors());

// Using Routers
app.use(apiRouter);

// Error handling middleware
app.use(ErrorHandlers.errorCallBack());
app.use("/*",async(req: Request, res: Response, next: NextFunction)=>{
  res.status(404).json({message: "Route not found!"});
})

// Start the server
app.listen(port, (err?: Error) => {
  if (err) {
    console.log(`Error in running the server: ${err.message}`);
    return;
  }
  console.log(`Server is running on port: ${port}`);
});
